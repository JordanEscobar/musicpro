package musicpro.Service;

import java.util.ArrayList;
import java.util.List;
import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import musicpro.Repository.ProductoRepository;
import musicpro.entity.Producto;
@Service
public class ProductoServiceImpl implements ProductoService{
	@Autowired
	private final ProductoRepository productoRepo;
	
	public ProductoServiceImpl(ProductoRepository productoRepo) {
		super();
		this.productoRepo = productoRepo;
	}
	
	@Override
	public List<Producto> findAllProductsInStock() {
		return (List<Producto>)productoRepo.findAll();
	}
	
	@Override
	@Transactional
	public void actualizarStock(Integer stock, Integer id) {
		List<Producto> listaP = (List<Producto>) productoRepo.findAll();
		for (int i = 0; i < listaP.size(); i++) {
			if(listaP.get(i).getId() == id) {
				Producto p = new Producto();
				p.setId(id);
				p.setCategoria(listaP.get(i).getCategoria());
				p.setNombre(listaP.get(i).getNombre());
				p.setDescripcion(listaP.get(i).getDescripcion());
				p.setPrecio(listaP.get(i).getPrecio());
				p.setStock(stock);
				this.productoRepo.save(p);
			}
		}
	}

	@Override
	@Transactional
	public String generarPedido(List<Integer> listaIdProducto) {
		List<Producto> listaProductos = (List<Producto>) productoRepo.findAll();
		List<Integer> listaIdTotalProductos = new ArrayList<>();
		
		for (int i = 0; i < listaProductos.size(); i++) {
			
		}
		
		
		
		Integer total = 0;
		
		List<String> nombres = new ArrayList<>();
		List<Integer> precioUnitario = new ArrayList<>();
		for (int i = 0; i < lista.size(); i++) {
			total = total + lista.get(i).getPrecio();
			nombres.add(lista.get(i).getNombre());
			precioUnitario.add(lista.get(i).getPrecio());
			for (int j = 0; j < listaP.size(); j++) {
				if(lista.get(i).getId() == listaP.get(j).getId()) {
					listaP.get(j).setStock(listaP.get(j).getStock() - 1);
					actualizarStock(listaP.get(j).getStock(),listaP.get(j).getId());
				}
			}
		}
		return "Productos Comprados: " + nombres.toString() + " Precio Unitario: $" + precioUnitario.toString() + "\n Total a Pagar: $"+ total.toString();
	}



}
