package musicpro.Controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import io.swagger.annotations.ApiParam;
import io.swagger.v3.oas.annotations.tags.Tag;
import musicpro.Service.ProductoService;
import musicpro.entity.Producto;

@RestController
@Tag(name="Controlador de servicios CRUD")
@RequestMapping("/api/producto")
public class HomeController {
	@Autowired
	private final ProductoService productoService;
	
	//IR A LA RUTA  http://localhost:8080/swagger-ui/index.html
	public HomeController(ProductoService productoService) {
		super();
		this.productoService = productoService;
	}
	
	//  Servicio para almacenar nuevos productos al inventario. 
	@Tag(name="2 . Agregar nuevo producto a MusicPro")
		@PostMapping
		public ResponseEntity<Producto> crearProducto(@RequestBody @Valid  Producto producto) {
			return new ResponseEntity<Producto>(productoService.CrearProducto(producto),HttpStatus.CREATED);
		}
		
	//  Servicio para modificar un producto en particular. 	
	@Tag(name="4 . Modificar Producto en MusicPro")
		@PutMapping("/modificar/{id}")
		public void editar(@RequestBody @Valid Producto producto, @PathVariable Integer id) {
			productoService.modificarProducto(producto, id);
			ResponseEntity.ok(Boolean.TRUE);
		}

	//  Servicio para listar los productos en stock
	@Tag(name="1. Listar productos con stock en MusicPro")
	@GetMapping
	public List<Producto> findAllProductsInStock() {
		return productoService.findAllProductsInStock();
	}
	
	// Servicio para eliminar producto por id
	@Tag(name="3. Eliminar Productos en music pro")
	@DeleteMapping("/eliminar/{id}")
	 public void EliminarProducto(@PathVariable Integer id){	
		this.productoService.EliminarProducto(id);
		ResponseEntity.ok(Boolean.TRUE);
	}
	
	
	
}
