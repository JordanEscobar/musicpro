package musicpro.Service;

import java.util.List;
import java.util.Optional;
import musicpro.Exception.RequestException;
import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import musicpro.Repository.ProductoRepository;
import musicpro.entity.Producto;
@Service
public class ProductoServiceImpl implements ProductoService{
	@Autowired
	private final ProductoRepository productoRepo;
	
	public ProductoServiceImpl(ProductoRepository productoRepo) {
		super();
		this.productoRepo = productoRepo;
	}

	@Override
	@Transactional
	public List<Producto> findAll() {
		return (List<Producto>) productoRepo.findAll();
	}

	@Override
	@Transactional
	public List<Producto> findAllProductsInStock() {
		return productoRepo.findAllProductsInStock();
	}

	@Override
	@Transactional
	public Producto CrearProducto(Producto producto) {
		List<Producto> lista = (List<Producto>) productoRepo.findAll();
		if(producto != null ||  lista !=null) {
			
		}
		
		return productoRepo.save(producto);
	}
	

	@Override
	@Transactional
	public void modificarProducto(Producto producto, Integer id) {
		Optional<Producto> productoId = productoRepo.findById(id);
		Producto productoNueva = productoId.get();
		productoNueva.setCategoria(producto.getCategoria());
		productoNueva.setNombre(producto.getNombre());
		productoNueva.setDescripcion(producto.getDescripcion());
		productoNueva.setPrecio(producto.getPrecio());
		productoNueva.setStock(producto.getStock());
		this.productoRepo.save(productoNueva);
		
	}

	@Override
	@Transactional
	public void EliminarProducto(Integer id) {	
		
		if (id > 0 && id != null) {
			
			productoRepo.deleteById(id);
		}	
	} 
}
	
	

